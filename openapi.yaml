openapi: 3.0.0
info:
  title: My Blog API
  description: API for managing blog posts, user authentication, and registration.
  version: 1.0.0
servers:
  - url: http://localhost:8000  # Update with your actual server URL

paths:
  /hello/:
    get:
      summary: "Say Hello"
      description: "Returns a simple hello world message."
      responses:
        '200':
          description: "Success"

  /post/:
    get:
      summary: "List all blog posts"
      description: "Retrieve a list of all blog posts."
      responses:
        '200':
          description: "A list of blog posts"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    content:
                      type: string

  /post/{pk}/:
    get:
      summary: "Retrieve a specific blog post"
      description: "Retrieve details of a single blog post by its ID."
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "A single blog post"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  content:
                    type: string

    put:
      summary: "Edit a specific blog post"
      description: "Update a blog post by its ID."
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: "Post updated"

    delete:
      summary: "Delete a specific blog post"
      description: "Delete a blog post by its ID."
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: "Post deleted"

  /post/new/:
    post:
      summary: "Create a new blog post"
      description: "Create a new blog post with title and content."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: "Post created"

  /register/:
    post:
      summary: "Register a new user"
      description: "Register a new user by providing username, email, and password."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: "User registered"

  /login/:
    post:
      summary: "User login"
      description: "Login a user by providing username and password."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: "User logged in"

  /logout/:
    post:
      summary: "User logout"
      description: "Logout the current user."
      responses:
        '200':
          description: "User logged out"
